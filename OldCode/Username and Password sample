pragma solidity ^0.4.0; // using solidity version 0.4.0

contract TestCase{
    address client;     // To hold an address
    bytes32 username;   // To hold a username
    bytes32 password;   // To hold a password
    
    
    // Updates the log book every time UpdateStatus is called.
    event UpdateStatus(string _msg, address user);
    
    // Constructor
    function TestCase(){
        // Initializes the address to client to
        // whoever created the contract
        client = msg.sender;
    }
    /* 
    Modifier: When called, it checks if the address/client who initiated the arguement(s)
    is the client whom created the contract. If the address/client is not the creator then
    the attempted argument is thrown out.
    Modifier's are attached to functions.
    */
    modifier isClient(){
        // if client is not the message sender then throw the attempted arguement.
        if (client != msg.sender){
            throw;
        }
        _; // Otherwise continue
    }
    /*
    This funtion set's the username if, and only if, client == client
    @param un The username
    */
    function setUsername(bytes32 un) isClient{
        UpdateStatus('An attempt to log in by username has been been initiated!', msg.sender);
        username = un;
    }
    /*
    This function retrieves the username if, and only if, client == client
    */
    function getUsername() isClient constant returns(bytes32){
        UpdateStatus('An attempt to retrieve the username has been initiated!', msg.sender);
        return username;
    }
    /*
    This function sets the password if, and only if, client == client
    @param pw The password
    */
    function setPassword(bytes32 pw) isClient{
        UpdateStatus('An attempt to log in by passord has been been initiated', msg.sender);
        password = pw; 
    }
    /*
    This function retreives the password if, and only if, client == client
    */
    function getPassword() isClient constant returns(bytes32){
        UpdateStatus('An attempt to retrieve the password has been initiated!', msg.sender);
        return password;
    }
}
